{"version":3,"sources":["./src/app/shared/guards/auth.guard.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAA2C;AACiE;AAEjE;AACU;IAIxC,SAAS,SAAT,SAAS;IAIrB,YACS,MAAc,EACd,MAAqB,EACrB,GAAe;QAFf,WAAM,GAAN,MAAM,CAAQ;QACd,WAAM,GAAN,MAAM,CAAe;QACrB,QAAG,GAAH,GAAG,CAAY;IAEpB,CAAC;IAEL,WAAW,CACV,IAA4B,EAC5B,KAA0B;QAC1B,IAAI,IAAI,CAAC,GAAG,CAAC,UAAU,EAAE,EAAE;YAC1B,OAAO,IAAI,CAAC;SACZ;aACI;YACJ,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;SACjC;IACF,CAAC;CA+CD;;YA1EQ,sDAAM;YAEN,wDAAa;YACb,gEAAU;;AAIN,SAAS;IADrB,gEAAU,CAAC,EAAE,UAAU,EAAE,MAAM,EAAE,CAAC;qCAMjB,sDAAM;QACN,wDAAa;QAChB,gEAAU;GAPZ,SAAS,CAmErB;AAnEqB","file":"common-es2015.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { ApiService } from '../services/api.service';\r\n\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuthGuard implements CanActivate {\r\n\tmenuItemArray: any;\r\n\tbacktoDashboard: boolean;\r\n\tadminData: any;\r\n\tconstructor(\r\n\t\tprivate router: Router,\r\n\t\tprivate toastr: ToastrService,\r\n\t\tprivate api: ApiService,\r\n\r\n\t) { }\r\n\r\n\tcanActivate(\r\n\t\tnext: ActivatedRouteSnapshot,\r\n\t\tstate: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\r\n\t\tif (this.api.isLoggedIn()) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.router.navigate(['/login']);\r\n\t\t}\r\n\t}\r\n\t// canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\r\n\t//     if (!localStorage.getItem('admin') && (state.url !== '/' && state.url !== '/forgotPassword'\r\n\t//         && state.url !== '/changePassword' && state.url !== '/reset-password')) {\r\n\t//         this.router.navigateByUrl('/');\r\n\t//         return false;\r\n\t//     } else if (localStorage.getItem('admin')) {\r\n\t//         this.adminData = JSON.parse(localStorage.getItem('admin'));\r\n\t//         if ((this.adminData.role.slug != 'super_admin') && (this.adminData.role.permissions.indexOf(next.data.key) == -1)) {\r\n\t//             this.toastr.warning(`You don't have access to this page`)\r\n\t//             this.router.navigateByUrl('/dashboard');\r\n\t//             return false\r\n\t//         }\r\n\r\n\t//         if (state.url === '/') {\r\n\t//             this.router.navigateByUrl('/dashboard');\r\n\t//         }\r\n\t//         if (localStorage.getItem('menuItemArray')) {\r\n\t//             const checkUrl = state.url.split('/');\r\n\t//             const url = checkUrl[1];\r\n\t//             this.backtoDashboard = true;\r\n\t//             this.menuItemArray = JSON.parse(localStorage.getItem('menuItemArray'));\r\n\t//             for (const i of this.menuItemArray) {\r\n\t//                 if ((i.state === url) && i.value === true) {\r\n\t//                     if (this.adminData.role === 'subAdmin' && checkUrl && checkUrl.length && checkUrl.length > 2) {\r\n\t//                         if (i.create === false && (checkUrl[2]).includes('add-')) {\r\n\t//                             this.backtoDashboard = true;\r\n\t//                         } else if (i.update === false && (checkUrl[2]).includes('edit-')) {\r\n\t//                             this.backtoDashboard = true;\r\n\t//                         } else {\r\n\t//                             this.backtoDashboard = false;\r\n\t//                         }\r\n\t//                     } else {\r\n\t//                         this.backtoDashboard = false;\r\n\t//                     }\r\n\t//                     break;\r\n\t//                 }\r\n\t//             }\r\n\r\n\t//             if (this.backtoDashboard === true) {\r\n\t//                 this.router.navigateByUrl('/dashboard');\r\n\t//             }\r\n\t//         }\r\n\t//     }\r\n\r\n\t//     return true;\r\n\t// }\r\n}"],"sourceRoot":"webpack:///"}