{"version":3,"sources":["./src/app/shared/guards/auth.guard.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAA2C;AACiE;AAEjE;AACU;IAIxC,SAAS,SAAT,SAAS;IAIrB,YACS,MAAc,EACd,MAAqB,EACrB,GAAe;QAFf,WAAM,GAAN,MAAM,CAAQ;QACd,WAAM,GAAN,MAAM,CAAe;QACrB,QAAG,GAAH,GAAG,CAAY;IAEpB,CAAC;IAEL,WAAW,CACV,IAA4B,EAC5B,KAA0B;QAC1B,IAAI,IAAI,CAAC,GAAG,CAAC,UAAU,EAAE,EAAE;YAC1B,OAAO,IAAI,CAAC;SACZ;aACI;YACJ,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;SACjC;IACF,CAAC;CA+CD;;YA1EQ,sDAAM;YAEN,wDAAa;YACb,gEAAU;;AAIN,SAAS;IADrB,gEAAU,CAAC,EAAE,UAAU,EAAE,MAAM,EAAE,CAAC;qCAMjB,sDAAM;QACN,wDAAa;QAChB,gEAAU;GAPZ,SAAS,CAmErB;AAnEqB","file":"common-es2015.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { ToastrService } from 'ngx-toastr';\nimport { ApiService } from '../services/api.service';\n\n\n@Injectable({ providedIn: 'root' })\nexport class AuthGuard implements CanActivate {\n\tmenuItemArray: any;\n\tbacktoDashboard: boolean;\n\tadminData: any;\n\tconstructor(\n\t\tprivate router: Router,\n\t\tprivate toastr: ToastrService,\n\t\tprivate api: ApiService,\n\n\t) { }\n\n\tcanActivate(\n\t\tnext: ActivatedRouteSnapshot,\n\t\tstate: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n\t\tif (this.api.isLoggedIn()) {\n\t\t\treturn true;\n\t\t}\n\t\telse {\n\t\t\tthis.router.navigate(['/login']);\n\t\t}\n\t}\n\t// canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n\t//     if (!localStorage.getItem('admin') && (state.url !== '/' && state.url !== '/forgotPassword'\n\t//         && state.url !== '/changePassword' && state.url !== '/reset-password')) {\n\t//         this.router.navigateByUrl('/');\n\t//         return false;\n\t//     } else if (localStorage.getItem('admin')) {\n\t//         this.adminData = JSON.parse(localStorage.getItem('admin'));\n\t//         if ((this.adminData.role.slug != 'super_admin') && (this.adminData.role.permissions.indexOf(next.data.key) == -1)) {\n\t//             this.toastr.warning(`You don't have access to this page`)\n\t//             this.router.navigateByUrl('/dashboard');\n\t//             return false\n\t//         }\n\n\t//         if (state.url === '/') {\n\t//             this.router.navigateByUrl('/dashboard');\n\t//         }\n\t//         if (localStorage.getItem('menuItemArray')) {\n\t//             const checkUrl = state.url.split('/');\n\t//             const url = checkUrl[1];\n\t//             this.backtoDashboard = true;\n\t//             this.menuItemArray = JSON.parse(localStorage.getItem('menuItemArray'));\n\t//             for (const i of this.menuItemArray) {\n\t//                 if ((i.state === url) && i.value === true) {\n\t//                     if (this.adminData.role === 'subAdmin' && checkUrl && checkUrl.length && checkUrl.length > 2) {\n\t//                         if (i.create === false && (checkUrl[2]).includes('add-')) {\n\t//                             this.backtoDashboard = true;\n\t//                         } else if (i.update === false && (checkUrl[2]).includes('edit-')) {\n\t//                             this.backtoDashboard = true;\n\t//                         } else {\n\t//                             this.backtoDashboard = false;\n\t//                         }\n\t//                     } else {\n\t//                         this.backtoDashboard = false;\n\t//                     }\n\t//                     break;\n\t//                 }\n\t//             }\n\n\t//             if (this.backtoDashboard === true) {\n\t//                 this.router.navigateByUrl('/dashboard');\n\t//             }\n\t//         }\n\t//     }\n\n\t//     return true;\n\t// }\n}"],"sourceRoot":"webpack:///"}