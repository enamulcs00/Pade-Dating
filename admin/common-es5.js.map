{"version":3,"sources":["webpack:///src/app/shared/guards/auth.guard.ts"],"names":["AuthGuard","router","toastr","api","next","state","isLoggedIn","navigate","providedIn"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UAQaA,SAAS;AAIrB,2BACSC,MADT,EAESC,MAFT,EAGSC,GAHT,EAGwB;AAAA;;AAFf,eAAAF,MAAA,GAAAA,MAAA;AACA,eAAAC,MAAA,GAAAA,MAAA;AACA,eAAAC,GAAA,GAAAA,GAAA;AAEJ;;AATgB;AAAA;AAAA,sCAYpBC,IAZoB,EAapBC,KAboB,EAaM;AAC1B,gBAAI,KAAKF,GAAL,CAASG,UAAT,EAAJ,EAA2B;AAC1B,qBAAO,IAAP;AACA,aAFD,MAGK;AACJ,mBAAKL,MAAL,CAAYM,QAAZ,CAAqB,CAAC,QAAD,CAArB;AACA;AACD;AApBoB;;AAAA;AAAA,S;;;;gBAPb;;gBAEA;;gBACA;;;;AAIIP,eAAS,eADrB,iEAAW;AAAEQ,kBAAU,EAAE;AAAd,OAAX,CACqB,E,iCAKJ,sD,EACA,wD,EACH,gE,EAPO,GAATR,SAAS,CAAT","file":"common-es5.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { ToastrService } from 'ngx-toastr';\nimport { ApiService } from '../services/api.service';\n\n\n@Injectable({ providedIn: 'root' })\nexport class AuthGuard implements CanActivate {\n\tmenuItemArray: any;\n\tbacktoDashboard: boolean;\n\tadminData: any;\n\tconstructor(\n\t\tprivate router: Router,\n\t\tprivate toastr: ToastrService,\n\t\tprivate api: ApiService,\n\n\t) { }\n\n\tcanActivate(\n\t\tnext: ActivatedRouteSnapshot,\n\t\tstate: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n\t\tif (this.api.isLoggedIn()) {\n\t\t\treturn true;\n\t\t}\n\t\telse {\n\t\t\tthis.router.navigate(['/login']);\n\t\t}\n\t}\n\t// canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n\t//     if (!localStorage.getItem('admin') && (state.url !== '/' && state.url !== '/forgotPassword'\n\t//         && state.url !== '/changePassword' && state.url !== '/reset-password')) {\n\t//         this.router.navigateByUrl('/');\n\t//         return false;\n\t//     } else if (localStorage.getItem('admin')) {\n\t//         this.adminData = JSON.parse(localStorage.getItem('admin'));\n\t//         if ((this.adminData.role.slug != 'super_admin') && (this.adminData.role.permissions.indexOf(next.data.key) == -1)) {\n\t//             this.toastr.warning(`You don't have access to this page`)\n\t//             this.router.navigateByUrl('/dashboard');\n\t//             return false\n\t//         }\n\n\t//         if (state.url === '/') {\n\t//             this.router.navigateByUrl('/dashboard');\n\t//         }\n\t//         if (localStorage.getItem('menuItemArray')) {\n\t//             const checkUrl = state.url.split('/');\n\t//             const url = checkUrl[1];\n\t//             this.backtoDashboard = true;\n\t//             this.menuItemArray = JSON.parse(localStorage.getItem('menuItemArray'));\n\t//             for (const i of this.menuItemArray) {\n\t//                 if ((i.state === url) && i.value === true) {\n\t//                     if (this.adminData.role === 'subAdmin' && checkUrl && checkUrl.length && checkUrl.length > 2) {\n\t//                         if (i.create === false && (checkUrl[2]).includes('add-')) {\n\t//                             this.backtoDashboard = true;\n\t//                         } else if (i.update === false && (checkUrl[2]).includes('edit-')) {\n\t//                             this.backtoDashboard = true;\n\t//                         } else {\n\t//                             this.backtoDashboard = false;\n\t//                         }\n\t//                     } else {\n\t//                         this.backtoDashboard = false;\n\t//                     }\n\t//                     break;\n\t//                 }\n\t//             }\n\n\t//             if (this.backtoDashboard === true) {\n\t//                 this.router.navigateByUrl('/dashboard');\n\t//             }\n\t//         }\n\t//     }\n\n\t//     return true;\n\t// }\n}"]}